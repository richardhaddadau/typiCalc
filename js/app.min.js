let calculationObj={calcArr:[],calcString:"",ongoingTotal:0,availableActions:{percent:"percent",divide:"/",times:"*",minus:"-",plus:"+"},addNumber:l=>{isNaN(calculationObj.calcArr[calculationObj.calcArr.length-1])&&""!==calculationObj.calcArr[calculationObj.calcArr.length-1]?calculationObj.calcArr.push(parseFloat(l)):(tempString=String(calculationObj.calcArr[calculationObj.calcArr.length-1]),tempString+=l,calculationObj.calcArr[calculationObj.calcArr.length-1]=parseFloat(tempString)),calculationObj.calcString+=l,calculationObj.sendToConsole()},addParenthesis:()=>{},addAction:l=>{calculationObj.availableActions.hasOwnProperty(l)&&(calculationObj.availableActions.hasOwnProperty(calculationObj.calcArr[calculationObj.calcArr.length-1])&&(calculationObj.calcArr.pop(),calculationObj.calcString.substring(0,calculationObj.calcString.length-1)),calculationObj.calcArr.push(l),calculationObj.calcString+=calculationObj.availableActions[l]),calculationObj.sendToConsole()},switchSign:()=>{calculationObj.calcArr[calculationObj.calcArr.length-1]=-1*calculationObj.calcArr[calculationObj.calcArr.length-1],console.log(calculationObj.calcArr)},sendToConsole:()=>{calculationObj.resolve(calculationObj.calcString),console.log(calculationObj.calcArr+", or String: "+calculationObj.calcString+", Total: "+calculationObj.ongoingTotal)},resolve:l=>{calculationObj.ongoingTotal=calculationObj.resolveAddition(l)},resolveAddition:l=>{let c=l.split("+"),a=c.map(l=>calculationObj.resolveMultiplication(l));const t=0;let n=a.reduce((l,c)=>l+c,t);return n},resolveMultiplication:l=>{let c=l.split("*"),a=c.map(l=>parseFloat(l));const t=1;let n=a.reduce((l,c)=>l*c,t);return n},resolveSubtraction:l=>{},resolveDivision:l=>{},clearLast:()=>{},clearAll:()=>{calculationObj.calcArr.length=0,calculationObj.calcString="",calculationObj.ongoingTotal=0}};